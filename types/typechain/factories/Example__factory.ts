/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Example, ExampleInterface } from "../Example";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "patientAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "doctorAddress",
        type: "address",
      },
    ],
    name: "RevokePermission",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "etherAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialty",
        type: "string",
      },
    ],
    name: "addEditDoctorData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "etherAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "bloodGroup",
        type: "string",
      },
      {
        internalType: "string",
        name: "bloodPressure",
        type: "string",
      },
      {
        internalType: "bool",
        name: "covidVaccine",
        type: "bool",
      },
    ],
    name: "addEditPatientMedicalData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patientAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "doctorAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "date",
        type: "string",
      },
      {
        internalType: "string",
        name: "diagnosis",
        type: "string",
      },
      {
        internalType: "string",
        name: "prescription",
        type: "string",
      },
    ],
    name: "addVisitHistory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "doctorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "patientAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "bloodGroup",
        type: "string",
      },
      {
        internalType: "string",
        name: "bloodPressure",
        type: "string",
      },
      {
        internalType: "bool",
        name: "covidVaccine",
        type: "bool",
      },
    ],
    name: "editPatientMedicalDataByDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getPatientMedicalList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "etherAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "bloodGroup",
            type: "string",
          },
          {
            internalType: "string",
            name: "bloodPressure",
            type: "string",
          },
          {
            internalType: "bool",
            name: "covidVaccine",
            type: "bool",
          },
        ],
        internalType: "struct Example.PatientMedicalData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patientAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "doctorAddress",
        type: "address",
      },
    ],
    name: "givePermission",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "patientCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008055600060035534801561001957600080fd5b50610e61806100296000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639e9fc5f3116100665780639e9fc5f31461012e578063a0303c411461014e578063a0f6d25e14610157578063bafe03d01461016a578063f58c79591461017d57600080fd5b80633d207522146100985780636ba112d6146100ad57806378522bc4146100c057806386b309ac146100dc575b600080fd5b6100ab6100a63660046108e3565b6101c4565b005b6100ab6100bb3660046109b1565b6102d4565b6100c960035481565b6040519081526020015b60405180910390f35b61011e6100ea366004610a5b565b6001600160a01b0391821660009081526007602090815260408083209390941682529190915220805460ff19169055600190565b60405190151581526020016100d3565b61014161013c366004610a8e565b6103b1565b6040516100d39190610af6565b6100c960005481565b6100ab610165366004610b8e565b610610565b6100ab610178366004610c02565b6106e0565b61011e61018b366004610a5b565b6001600160a01b038083166000908152600760209081526040808320938516835292905220805460ff1916600190811790915592915050565b6001600160a01b038088166000908152600760209081526040808320938c168352929052205460ff166101f657600080fd5b6040805160e0810182526001600160a01b0389811680835260208084018b81528486018b9052606085018a90526080850189905260a0850188905286151560c086015260009283526002909152939020825181546001600160a01b0319169216919091178155915190919060018201906102709082610d44565b506040820151600282015560608201516003820155608082015160048201906102999082610d44565b5060a082015160058201906102ae9082610d44565b5060c091909101516006909101805460ff19169115159190911790555050505050505050565b6001600160a01b03841660009081526004602052604090205460ff166102f957600080fd5b6040805160a0810182526001600160a01b03808816808352878216602080850191825284860189815260608601899052608086018890526000938452600690915294909120835181549084166001600160a01b03199182161782559151600182018054919094169216919091179091559151909190600282019061037d9082610d44565b50606082015160038201906103929082610d44565b50608082015160048201906103a79082610d44565b5050505050505050565b6103fc6040518060e0016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160608152602001606081526020016000151581525090565b6001600160a01b03808316600090815260026020908152604091829020825160e08101909352805490931682526001830180549293929184019161043f90610cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461046b90610cbf565b80156104b85780601f1061048d576101008083540402835291602001916104b8565b820191906000526020600020905b81548152906001019060200180831161049b57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180546104e590610cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461051190610cbf565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b5050505050815260200160058201805461057790610cbf565b80601f01602080910402602001604051908101604052809291908181526020018280546105a390610cbf565b80156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b50505091835250506006919091015460ff16151560209091015292915050565b6001600160a01b0383811660009081526005602052604090205416610666576001600160a01b0383166000908152600460205260408120805460ff19166001179055600380549161066083610e04565b91905055505b604080516060810182526001600160a01b03858116808352602080840187815284860187905260009283526005909152939020825181546001600160a01b0319169216919091178155915190919060018201906106c39082610d44565b50604082015160028201906106d89082610d44565b505050505050565b6001600160a01b0387811660009081526002602052604090205416610737576001600160a01b03871660009081526001602081905260408220805460ff191690911790558054908061073183610e04565b91905055505b6040805160e0810182526001600160a01b0389811680835260208084018b81528486018b9052606085018a90526080850189905260a0850188905286151560c086015260009283526002909152939020825181546001600160a01b0319169216919091178155915190919060018201906107b19082610d44565b506040820151600282015560608201516003820155608082015160048201906107da9082610d44565b5060a082015160058201906107ef9082610d44565b5060c091909101516006909101805460ff191691151591909117905550505050505050565b80356001600160a01b038116811461082b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261085757600080fd5b813567ffffffffffffffff8082111561087257610872610830565b604051601f8301601f19908116603f0116810190828211818310171561089a5761089a610830565b816040528381528660208588010111156108b357600080fd5b836020870160208301376000602085830101528094505050505092915050565b8035801515811461082b57600080fd5b600080600080600080600080610100898b03121561090057600080fd5b61090989610814565b975061091760208a01610814565b9650604089013567ffffffffffffffff8082111561093457600080fd5b6109408c838d01610846565b975060608b0135965060808b0135955060a08b013591508082111561096457600080fd5b6109708c838d01610846565b945060c08b013591508082111561098657600080fd5b506109938b828c01610846565b9250506109a260e08a016108d3565b90509295985092959890939650565b600080600080600060a086880312156109c957600080fd5b6109d286610814565b94506109e060208701610814565b9350604086013567ffffffffffffffff808211156109fd57600080fd5b610a0989838a01610846565b94506060880135915080821115610a1f57600080fd5b610a2b89838a01610846565b93506080880135915080821115610a4157600080fd5b50610a4e88828901610846565b9150509295509295909350565b60008060408385031215610a6e57600080fd5b610a7783610814565b9150610a8560208401610814565b90509250929050565b600060208284031215610aa057600080fd5b610aa982610814565b9392505050565b6000815180845260005b81811015610ad657602081850181015186830182015201610aba565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b03168282015282015160e06040830152600090610b25610100840182610ab0565b905060408401516060840152606084015160808401526080840151601f19808584030160a0860152610b578383610ab0565b925060a08601519150808584030160c086015250610b758282610ab0565b91505060c0840151151560e08401528091505092915050565b600080600060608486031215610ba357600080fd5b610bac84610814565b9250602084013567ffffffffffffffff80821115610bc957600080fd5b610bd587838801610846565b93506040860135915080821115610beb57600080fd5b50610bf886828701610846565b9150509250925092565b600080600080600080600060e0888a031215610c1d57600080fd5b610c2688610814565b9650602088013567ffffffffffffffff80821115610c4357600080fd5b610c4f8b838c01610846565b975060408a0135965060608a0135955060808a0135915080821115610c7357600080fd5b610c7f8b838c01610846565b945060a08a0135915080821115610c9557600080fd5b50610ca28a828b01610846565b925050610cb160c089016108d3565b905092959891949750929550565b600181811c90821680610cd357607f821691505b602082108103610cf357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d3f57600081815260208120601f850160051c81016020861015610d205750805b601f850160051c820191505b818110156106d857828155600101610d2c565b505050565b815167ffffffffffffffff811115610d5e57610d5e610830565b610d7281610d6c8454610cbf565b84610cf9565b602080601f831160018114610da75760008415610d8f5750858301515b600019600386901b1c1916600185901b1785556106d8565b600085815260208120601f198616915b82811015610dd657888601518255948401946001909101908401610db7565b5085821015610df45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201610e2457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220eddb8b7846acf3166bdf0a6550fab5b13968c2858e1e16368fabc90debbae24464736f6c63430008150033";

type ExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Example__factory extends ContractFactory {
  constructor(...args: ExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Example & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Example__factory {
    return super.connect(runner) as Example__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleInterface {
    return new Interface(_abi) as ExampleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Example {
    return new Contract(address, _abi, runner) as unknown as Example;
  }
}
